!function(e){var t={};function n(l){if(t[l])return t[l].exports;var r=t[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,l){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(l,r,function(t){return e[t]}.bind(null,r));return l},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="dist/assets/scripts/",n(n.s=0)}([function(e,t){const n=document.getElementById("cards"),l=document.getElementById("levels"),r=document.getElementById("selected-levels"),o=document.getElementById("greet"),s=document.getElementById("helper"),d=document.getElementById("backdrop"),i=document.getElementById("rules-window"),a=document.querySelector("#rules-window button");let c=document.getElementById("memo-helper-text");const u=["red","yellow","blue","pink","green","lightblue","brown","darkgreen","purple","lime"],m=["green0","green1","green2","green3","green4","green5","green6","green7","green8","green9"];let g;const y=[];let p,f,b=[],k=0,v=0;const h=()=>{d.style.display="block",i.style.display="block",d.addEventListener("click",x),a.addEventListener("click",x)},E=()=>{let e;for(y.length=0;y.length<2*f;){let t=Math.random()*(f-1);t=t.toFixed(0),e=g[t],y.filter(t=>t==e).length<2&&y.push(e)}},L=e=>{let t=e.getAttribute("id");if(!e.classList.contains("confirmed")){if(p[t-1].classList.add(y[t-1]+"-card"),p[t-1].classList.remove("backside"),b.push(p[t-1]),2===b.length){v++;let e=document.getElementById(b[0].id),t=document.getElementById(b[1].id);b[0].classList.value===b[1].classList.value?b[0].id!==b[1].id?(e.classList.add("confirmed"),t.classList.add("confirmed"),b=[],k++,console.log(k)):b.pop():(b=[],setTimeout(()=>{e.className="card backside",t.className="card backside"},800))}k===f&&(s.removeEventListener("click",h),w("win"))}},x=()=>{d.style.display="none",i.style.display="none"},w=e=>{switch(e){case"rules":c.textContent="Do you know how to play? \n No? Click me!",s.addEventListener("click",h);break;case"win":c.textContent=`Congrats! You've found all pairs! \n It took ${v} steps for you.`,s.style.display="none",setTimeout(()=>{s.style.display="block"},5);break;case"again":c.textContent="You can do it!";break;case"designerMode":c.textContent="Find all green cards!";break;default:c.textContent="Hi! I'm mr.Memo. Let's play!"}};r.addEventListener("click",()=>{p=null,w("rules"),o.style.display="none",s.style.display="block",n.firstChild&&(console.log("again"),w("again"),(e=>{for(;e.firstChild;)e.removeChild(e.firstChild)})(n)),(e=>{switch(e){case"easy":f=4,g=u;break;case"medium":f=6,g=u;break;case"hard":f=10,g=u;break;case"designer":f=10,g=m,console.log("design"),w("designerMode");break;default:f=4}})(l.value),n.style.gridTemplateColumns=f>8?"repeat(5, 130px)":"repeat(4, 130px)";for(let e=1;e<=2*f;e++){const t=document.createElement("div");t.classList.add("card","backside"),t.classList.add("card"),t.setAttribute("id",e),n.appendChild(t)}p=document.querySelectorAll(".card"),p.forEach(e=>e.addEventListener("click",L.bind(null,e))),E(),v=0,k=0})}]);
//# sourceMappingURL=main.js.aa381e9822fb64972a08.js.map